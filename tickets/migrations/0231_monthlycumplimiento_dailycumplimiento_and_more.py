# Generated by Django 4.2.20 on 2025-10-28 12:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tickets', '0230_alter_urlmanager_encrypted_password_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MonthlyCumplimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ejemplo: Ejercicio diario, Lectura, Meditación', max_length=200, verbose_name='Nombre de la meta')),
                ('user', models.CharField(help_text='Nombre del usuario que debe cumplir esta meta', max_length=100, verbose_name='Usuario')),
                ('frequency_type', models.CharField(choices=[('daily', 'Todos los días'), ('specific', 'Número específico de días')], default='daily', max_length=20, verbose_name='Tipo de frecuencia')),
                ('target_days', models.PositiveIntegerField(default=30, help_text='Número de días que debe cumplir en el mes (solo para tipo específico)', verbose_name='Días objetivo')),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la meta', null=True, verbose_name='Descripción')),
                ('public_uuid', models.UUIDField(default=uuid.uuid4, help_text='ID único para acceso público', unique=True, verbose_name='ID público')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Cumplimiento Mensual',
                'verbose_name_plural': 'Cumplimientos Mensuales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyCumplimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('completed', models.BooleanField(default=False, verbose_name='Cumplido')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales sobre el cumplimiento de este día', null=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('monthly_cumplimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_cumplimientos', to='tickets.monthlycumplimiento', verbose_name='Cumplimiento mensual')),
            ],
            options={
                'verbose_name': 'Cumplimiento Diario',
                'verbose_name_plural': 'Cumplimientos Diarios',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='monthlycumplimiento',
            index=models.Index(fields=['public_uuid'], name='tickets_mon_public__df9fc8_idx'),
        ),
        migrations.AddIndex(
            model_name='monthlycumplimiento',
            index=models.Index(fields=['created_by', 'is_active'], name='tickets_mon_created_32fd71_idx'),
        ),
        migrations.AddIndex(
            model_name='dailycumplimiento',
            index=models.Index(fields=['monthly_cumplimiento', 'date'], name='tickets_dai_monthly_09a979_idx'),
        ),
        migrations.AddIndex(
            model_name='dailycumplimiento',
            index=models.Index(fields=['date', 'completed'], name='tickets_dai_date_6c22b5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailycumplimiento',
            unique_together={('monthly_cumplimiento', 'date')},
        ),
    ]
