# Generated by Django 5.2.6 on 2025-09-21 14:33

from django.db import migrations
import uuid


def populate_unique_tokens(apps, schema_editor):
    """Genera tokens únicos para todos los tickets existentes"""
    Ticket = apps.get_model('tickets', 'Ticket')
    
    for ticket in Ticket.objects.all():
        # Generar nuevo UUID si no tiene uno o si está duplicado
        new_token = uuid.uuid4()
        while Ticket.objects.filter(public_share_token=new_token).exists():
            new_token = uuid.uuid4()
        
        ticket.public_share_token = new_token
        ticket.save(update_fields=['public_share_token'])


def reverse_populate_tokens(apps, schema_editor):
    """Función reversa (no hace nada, ya que los tokens seguirán siendo válidos)"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0009_add_public_sharing_fields'),
    ]

    operations = [
        migrations.RunPython(populate_unique_tokens, reverse_populate_tokens),
    ]
