version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ticketproo_db
      POSTGRES_USER: ticketproo_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ticketproo-internal
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ticketproo_user -d ticketproo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ticketproo-internal
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # Aplicación Django
  web:
    image: ticketproo:latest
    environment:
      DEBUG: 'False'
      SECRET_KEY_FILE: /run/secrets/django_secret
      DATABASE_URL: postgresql://ticketproo_user:password@db:5432/ticketproo_db
      REDIS_URL: redis://redis:6379/0
      ALLOWED_HOSTS: ticketproo.com,www.ticketproo.com
    secrets:
      - django_secret
      - postgres_password
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    networks:
      - ticketproo-internal
      - traefik-public
    deploy:
      replicas: 3  # 3 réplicas para alta disponibilidad
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      labels:
        # Configuración Traefik
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        
        # Router principal
        - traefik.http.routers.ticketproo.rule=Host(`ticketproo.com`) || Host(`www.ticketproo.com`)
        - traefik.http.routers.ticketproo.entrypoints=websecure
        - traefik.http.routers.ticketproo.tls=true
        - traefik.http.routers.ticketproo.tls.certresolver=letsencrypt
        
        # Servicio
        - traefik.http.services.ticketproo.loadbalancer.server.port=8000
        - traefik.http.services.ticketproo.loadbalancer.healthcheck.path=/health/
        
        # Middlewares
        - traefik.http.middlewares.ticketproo-compress.compress=true
        - traefik.http.middlewares.ticketproo-headers.headers.customRequestHeaders.X-Forwarded-Proto=https
        - traefik.http.routers.ticketproo.middlewares=ticketproo-compress,ticketproo-headers
        
        # Redirección www
        - traefik.http.routers.ticketproo-www.rule=Host(`www.ticketproo.com`)
        - traefik.http.routers.ticketproo-www.entrypoints=websecure
        - traefik.http.routers.ticketproo-www.tls=true
        - traefik.http.routers.ticketproo-www.middlewares=www-redirect
        - traefik.http.middlewares.www-redirect.redirectregex.regex=^https://www\.(.*)
        - traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$${1}
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker Celery para tareas asíncronas (opcional)
  worker:
    image: ticketproo:latest
    command: celery -A ticket_system worker -l info
    environment:
      DEBUG: 'False'
      SECRET_KEY_FILE: /run/secrets/django_secret
      DATABASE_URL: postgresql://ticketproo_user:password@db:5432/ticketproo_db
      REDIS_URL: redis://redis:6379/0
    secrets:
      - django_secret
      - postgres_password
    volumes:
      - media_files:/app/media
    networks:
      - ticketproo-internal
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    depends_on:
      - db
      - redis

  # Nginx para archivos estáticos (opcional, Traefik puede manejarlos)
  nginx:
    image: nginx:alpine
    volumes:
      - static_files:/usr/share/nginx/html/static:ro
      - media_files:/usr/share/nginx/html/media:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - traefik-public
    deploy:
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.ticketproo-static.rule=Host(`ticketproo.com`) && (PathPrefix(`/static/`) || PathPrefix(`/media/`))
        - traefik.http.routers.ticketproo-static.entrypoints=websecure
        - traefik.http.routers.ticketproo-static.tls=true
        - traefik.http.services.ticketproo-static.loadbalancer.server.port=80

# Secrets para datos sensibles
secrets:
  postgres_password:
    external: true
  django_secret:
    external: true

# Volúmenes persistentes
volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:

# Redes
networks:
  ticketproo-internal:
    driver: overlay
    attachable: true
  traefik-public:
    external: true